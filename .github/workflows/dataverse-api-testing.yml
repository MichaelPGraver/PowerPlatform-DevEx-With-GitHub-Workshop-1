# This is a GitHub Actions workflow for testing customizations implemented around Dataverse using its API.
# The workflow is triggered on every push only under the "src/dataverse-api-testing" folder to the main branch.
# 
# The workflow performs the following steps:
# 1. Setup: It sets up the required environment with .NET 8.0.
# 2. Restore Dependencies: It restores all the dependencies and tools of the .NET project using the 'dotnet restore' command.
# 3. Test: It runs API tests using the 'dotnet test' command using the "DATAVERSE_ENVIRONMENT_URL", "CLIENT_ID" and "CLIENT_SECRET" GitHub environment secrets and variables in the repository to be able to use the Dataverse API in the considered Test environment.
# 4. Publish Test Results: Use the "dorny/test-reporter@main" GitHub action using the trx file generated by the test command and the "dotnet-trx" reporter to get a nice report of the test results.

name: Dataverse API Testing

on:
  push:
    paths:
      - 'src/dataverse-api-testing/**'
    branches:
      - main

jobs:
    build:
        runs-on: ubuntu-latest
        environment:
            name: 'Sandbox'
    
        steps:
        - name: Checkout repository
          uses: actions/checkout@v2
    
        - name: Setup .NET 6.0
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: 6.0.x
    
        - name: Restore Dependencies
          run: dotnet restore src/dataverse-api-testing
    
        - name: Test
          run: dotnet test src/dataverse-api-testing --no-build --logger trx --results-directory test-results
          env:
            DATASERVICE_URL: ${{ secrets.DATAVERSE_ENVIRONMENT_URL }}
            CLIENT_ID: ${{ secrets.CLIENT_ID }}
            CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
    
        - name: Publish Test Results
          uses: dorny/test-reporter@main
          with:
            name: Dataverse API Testing
            path: test-results/**/*.trx
            reporter: dotnet-trx